//gfg problem
//{ Driver Code Starts
#include<bits/stdc++.h> 
using namespace std; 

// } Driver Code Ends
class Solution
{
    private:
    void solve(vector<int> arr,vector<int> res,vector<int> &ans,int index,int sum,unordered_map<int,bool> m1)
    {
        if(index == arr.size())
        {
            if(m1.find(sum)==m1.end())
            {
                ans.push_back(sum);
                m1[sum] = true;
                sum = 0;
            }
            return;
        }
        //exlcude
        solve(arr,res,ans,index+1,sum,m1);
        //include
        int ele = arr[index];
        sum = sum+ele;
        res.push_back(ele);
        solve(arr,res,ans,index+1,sum,m1);
    }
public:
    vector<int> subsetSums(vector<int> arr, int N)
    {
        // Write Your Code here
        vector<int> res;
        vector<int> ans;
        int index = 0;
        int sum = 0;
        unordered_map<int,bool> m1;
        solve(arr,res,ans,index,sum,m1);
        return ans;
    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        int N;
        cin>>N;
        vector<int> arr(N);
        for(int i = 0 ; i < N ; i++){
            cin >> arr[i];
        }
        Solution ob;
        vector<int> ans = ob.subsetSums(arr,N);
        sort(ans.begin(),ans.end());
        for(auto sum : ans){
            cout<< sum<<" ";
        }
        cout<<endl;
    }
    return 0;
}
// } Driver Code Ends
